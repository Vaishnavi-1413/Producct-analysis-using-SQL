-- Data cleaning
select * 
from orders
Limit 10;

describe orders;
set SQL_SAFE_UPDATES=0;

UPDATE orders
SET 
    order_date = STR_TO_DATE(order_date, '%m/%d/%Y'),
    ship_date = STR_TO_DATE(ship_date, '%m/%d/%Y');

Alter table orders
modify column order_date Date,
modify column ship_date Date;
-- checking for null values
Select count(*) from orders
where order_no is null;
-- checking for duplicates;
select order_no, count(order_no)
from orders
group by order_no
having count(order_no)>1;

select * 
from orders
where order_no='5768-2' or order_no='6159-2';

-- 1) What is the total_revanue generated by each category.products
select product_category, sum(total) as "total_revanue" from orders as o 
join products as p on o.product_id=p.product_id
group by p.product_category;
-- 2) how many unique products have been used
select count(distinct(product_id)) as 'product_count' from orders;
-- 3) What is the total revanue generated in each year.
select extract(year from order_date) as Year,round(sum(total),4) as total_revanue
from orders
group by year;
-- 4) What is date of latest and earliest order
select min(order_date) as 'earliest_order', max(order_date) as 'latest_order';
-- 5) What product category has lowest average price of products
SELECT
 p.product_category,
 avg(o.retail_price) as average
 from orders o join products p
 using (product_id)
 group by  p.product_category
 order by average
 limit 1;
 -- 6) What are the top 10 highest performing products
 select 
	product_name,
    round(sum(total)) Revenue
from orders
join products
using (product_id)
group by product_name
order by Revenue DESC
limit 10;
-- 8) Show the total revanue and profit generated by each account manger.
select account_manager,
       round(sum(total),2) Revenue, 
       round(sum(total) - sum(cost_price),2) Profit
from orders
join account_managers
using (account_id)
group by account_manager;
-- What is the name, city and account_manager of the highest selling product in 2017
select 
    product_name, 
    city, 
    account_manager,
    round(sum(total),2) Rev
from products
join orders
using (product_id)
join account_managers
using (account_id)
where  extract(year from order_date)=2017
group by product_name,city,account_manager
order by rev desc
Limit 1 ;
-- Find the mean amount spent per order by each customer type?
select customer_type,
       round(avg(total),2)
from orders
group by customer_type;







